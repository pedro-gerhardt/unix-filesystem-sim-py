legenda:
 * pronto
 - aberto
 x abortado
 + a decidir

lista:
    * ao situar a pasta atual, printar absolute path, se receber um parametro, printar aquele diretorio
    * quando usar o atributo tamanho? -> no ls
    * ao comparar o nome de algum diretorio com o recebido pelo input do usuario, nome do diretorio vem com / 
    * começar a tratar os blocos, os arquivos
    * testar escrever buffer maior que 2 blocos
    * colocar mensagens de erro (ex: arquivo inexistente)
    * usar dicionario na lista de usuarios tambem
    * remodelar relacao filho pai:
        * trabalhar com nome absoluto, nao relativo
        * dentro de diretorio armazenar nome, nao inode
        * dicionario global com nomes como chaves e inodes como valores
    * testar direitos em todas ações
    * inode armazenar apenas id do usuario
    * possibilitar acessar terminal como um usuario cadastrado (no começo de cada linha do terminal, colocar o nome assim como no linux)
    * ao adicionar um usuario, checar se nao há usuario com tal id ou nome
    * criar nova funcao data, para mostrar as 3 datas 
    * fazer sistema de atualizacao das datas modif. e ult. acesso
    * ao excluir um diretorio, excluir tudo aquilo dentro
    * ao remover um usuario, manter arquivos/diretorios, porém ao executar um ls, mostrar id do usuario antigo e nao nome
    
    - fazer sistema de blocos indiretos

    + talvez padronizar tabs no ls
    + help
    + talvez fazer um sistema externo de localização dos diretorios/arquivos, com chave o nome do diretorio e valor como diretorios/arquivos dentro dele, simulando um absolute path
    + talvez ao procurar um absolute path, ver a partir do root descendo
    + talvez fazer sistema de seta para cima, trazer comandos anteriores
    


 Funções de Manipulação:
* data
* formata( ) /* Limpa estruturas de alocação de arquivo e blocos livres */
* gravar_conteudo(nome, posição, nbytes, buffer)
* cat(nome)
* touch(nome) /* deve saber que usuário está criando */
* rm(nome)
* chown(user1, user2, arquivo) /* arquivos existentes */
* chmod(arquivo, flags)
* mkdir(diretorio) /* só nomes relativos de um subdiretorio*
* rmdir(nome)
* cd(diretorio) /* só nomes relativos de um subdiretorio*/
* ls(diretorio)
* adduser(nome, id) /* somente administrador */
* rmuser(nome) /* remove tudo que é referente ao usuário */
* lsuser( )
